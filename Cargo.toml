[package]
name = "parquet-wasm"
version = "0.1.1"
authors = ["Kyle Barron <kylebarron2@gmail.com>"]
edition = "2021"
description = "WebAssembly Parquet reader and writer."
readme = "README.md"
repository = "https://github.com/kylebarron/parquet-wasm"
license = "MIT OR Apache-2.0"
keywords = ["parquet", "webassembly", "arrow"]
categories = ["wasm"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "arrow1"]
arrow1 = ["arrow", "parquet"]

[dependencies]
wasm-bindgen = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
# if wee_alloc only saves 10KB, might not be worth the slower allocation speed?
# wee_alloc = "0.4.5"

js-sys = "0.3.53"
getrandom = { version = "0.2.3", features = ["js"] }
web-sys = { version = "0.3", features = ["console"] }
arrow2 = { git = "https://github.com/kylebarron/arrow2", branch = "kyle/io_parquet_wasm_compression", features = [
  "io_ipc",
  "io_parquet",
  "io_parquet_compression",
], optional = true }
arrow = { version = "10.0", default-features = false, optional = true }
parquet = { version = "10.0", default-features = false, features = [
  "snap",
  "arrow",
  "base64",
  "flate2",
  "brotli",
], optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
