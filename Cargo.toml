[package]
name = "parquet-wasm"
version = "0.3.1"
authors = ["Kyle Barron <kylebarron2@gmail.com>"]
edition = "2021"
description = "WebAssembly Parquet reader and writer."
readme = "README.md"
repository = "https://github.com/kylebarron/parquet-wasm"
license = "MIT OR Apache-2.0"
keywords = ["parquet", "webassembly", "arrow"]
categories = ["wasm"]
rust-version = "1.62"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["arrow1", "all_compressions", "reader", "writer"]
arrow1 = ["dep:arrow", "dep:parquet", "dep:bytes"]
arrow2 = ["dep:arrow2", "dep:parquet2", "dep:serde-wasm-bindgen"]
reader = []
writer = []
async = ["dep:wasm-bindgen-futures", "dep:futures", "dep:range-reader"]
debug = ["console_error_panic_hook", "clap"]

brotli = ["parquet?/brotli", "parquet2?/brotli"]
gzip = ["parquet?/flate2", "parquet2?/gzip"]
snappy = ["parquet?/snap", "parquet2?/snappy"]
zstd = ["parquet?/zstd", "parquet2?/zstd"]
# LZ4 not yet supported on parquet crate
lz4 = ["parquet2?/lz4_flex"]

all_compressions = ["brotli", "gzip", "snappy", "zstd", "lz4"]

# Full list of available features
full = ["arrow1", "arrow2", "async", "debug", "all_compressions", "reader", "writer"]

[dependencies]
wasm-bindgen = { version = "0.2.82", features = ["serde-serialize"]  }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
# if wee_alloc only saves 10KB, might not be worth the slower allocation speed?
# wee_alloc = "0.4.5"

js-sys = "0.3.59"
getrandom = { version = "0.2.6", features = ["js"] }
thiserror = "1.0"

arrow2 = { version = "0.13", optional = true, features = [
  "io_ipc",
  "io_parquet",
] }
parquet2 = { version = "0.14", default_features = false, optional = true }

arrow = { version = "19.0", default-features = false, optional = true }
parquet = { version = "19.0", default-features = false, optional = true, features = [
  "arrow",
  "base64",
  "async",
] }
async-compat = "0.2.1"
bytes = { version = "1", optional = true }

serde-wasm-bindgen = {version = "0.4.3", optional = true}

# 3.2 added deprecations that don't currently pass clippy
clap = { version = ">=3.1.15, <3.3", optional = true, features = ["derive"] }

wasm-bindgen-futures = {version = "0.4.30", optional = true}
futures = {version = "0.3", optional = true}
range-reader = {version = "0.2", optional = true}

[dependencies.web-sys]
version = "0.3.4"
features = [
  'console',
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
  "Document", "Element"
]

[dev-dependencies]
wasm-bindgen-test = "0.3.31"

[[bin]]
name = "read_parquet"
required-features = ["debug", "arrow1"]

[[bin]]
name = "write_parquet"
required-features = ["debug", "arrow1"]

[[bin]]
name = "read_parquet2"
required-features = ["debug", "arrow2"]

[[bin]]
name = "write_parquet2"
required-features = ["debug", "arrow2"]

[profile.release]
# Tell `rustc` to optimize for small code size.
# As of 3/15/22, opt-level = s was smallest
# https://github.com/kylebarron/parquet-wasm/pull/48
opt-level = "s"
lto = true
